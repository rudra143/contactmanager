{"version":3,"sources":["reducers/contactReducer.js","reducers/index.js","actions/types.js","store.js","components/contact/Contact.js","actions/contactActions.js","components/contact/Contacts.js","components/layout/TextInputGroup.js","components/contact/AddContact.js","components/contact/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["initialState","contact","contacts","id","name","email","phone","combineReducers","state","action","type","filter","payload","map","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Contact","showContactInfo","onDeleteClick","props","deleteContact","this","className","style","cursor","onClick","setState","bind","color","float","to","marginRight","Component","connect","Contacts","getContacts","Fragment","key","TextInputGroup","label","placeholder","onChange","value","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","uuidv4","addContact","history","push","EditContact","updContact","match","params","updateContact","nextProps","nextState","getContact","Header","branding","href","App","basename","process","exact","path","component","About","NotFound","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.8a3188d1.chunk.js","sourcesContent":["import {\r\n\tGET_CONTACTS,\r\n\tDELETE_CONTACT,\r\n\tADD_CONTACT,\r\n\tGET_CONTACT,\r\n\tUPDATE_CONTACT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n\tcontact: {},\r\n\tcontacts: [{\r\n\t\t\tid: \"1\",\r\n\t\t\tname: 'Maharudra Kekan',\r\n\t\t\temail: 'mkekan@gmail.com',\r\n\t\t\tphone: '222-222-2222'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: \"2\",\r\n\t\t\tname: 'Kushal Bhosale',\r\n\t\t\temail: 'kbhosale@gmail.com',\r\n\t\t\tphone: '111-111-1111'\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: \"3\",\r\n\t\t\tname: 'Sachin Pawar',\r\n\t\t\temail: 'spawar@gmail.com',\r\n\t\t\tphone: '444-444-4444'\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_CONTACTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\tcase DELETE_CONTACT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n\t\t\t};\r\n\t\tcase ADD_CONTACT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: [action.payload, ...state.contacts]\r\n\t\t\t};\r\n\t\tcase GET_CONTACT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontact: state.contacts.filter(contact => contact.id === action.payload)\r\n\t\t\t};\r\n\t\tcase UPDATE_CONTACT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import {\r\n\tcombineReducers\r\n} from 'redux';\r\nimport contactReducer from './contactReducer';\r\n\r\n\r\nexport default combineReducers({\r\n\tcontact: contactReducer\r\n})","export const GET_CONTACTS = 'GET_CONTACTS'\r\nexport const ADD_CONTACT = 'ADD_CONTACT'\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT'\r\nexport const GET_CONTACT = 'GET_CONTACT'\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT'","import {\r\n\tcreateStore,\r\n\tapplyMiddleware,\r\n\tcompose\r\n} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware),\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store;","import React, {\r\n\tComponent\r\n} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../actions/contactActions'\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n\tstate = {\r\n\t\tshowContactInfo: false\r\n\t}\r\n\r\n\tonDeleteClick = (id) => {\r\n\t\tthis.props.deleteContact(id)\r\n\t}\r\n\r\n\t// static propTypes = {\r\n\t// \tname: PropTypes.string.isRequired,\r\n\t// \temail: PropTypes.string.isRequired,\r\n\t// \tphone: PropTypes.string.isRequired,\r\n\t// }\r\n\r\n\trender() {\r\n\t\tconst { id, name, email, phone } = this.props.contact;\r\n\t\tconst { showContactInfo } = this.state;\r\n\r\n\t\treturn ( \r\n\t\t\t<div className=\"card card-body mb-3\">\r\n\t\t\t\t<h4>{name} <i style={{cursor: 'pointer'}} onClick={() => (\r\n\t\t\t\t\tthis.setState({showContactInfo: !this.state.showContactInfo})\r\n\t\t\t\t)} className=\"fas fa-sort-down\"></i>\r\n\t\t\t\t\t<i onClick={this.onDeleteClick.bind(this, id)} className=\"fa fa-times\" style={{color: 'red', cursor: 'pointer', float: 'right'}}></i>\r\n\t\t\t\t\t<Link to={`/contact/edit/${id}`}>\r\n\t\t\t\t\t\t<i className=\"fa fa-pencil-alt\" style={{\r\n\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\tmarginRight: '1rem',\r\n\t\t\t\t\t\t\tfloat: 'right'\r\n\t\t\t\t\t\t}}></i>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</h4>\r\n\r\n\t\t\t\t{showContactInfo ? (\r\n\t\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t<li className=\"list-group-item\">Phone : {phone}</li>\r\n\t\t\t\t\t<li className=\"list-group-item\">Email : {email}</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t) : null}\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nContact.propTypes = {\r\n\tcontact: PropTypes.object.isRequired,\r\n\tdeleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteContact })(Contact);","import {\r\n\tGET_CONTACTS,\r\n\tADD_CONTACT,\r\n\tDELETE_CONTACT,\r\n\tGET_CONTACT,\r\n\tUPDATE_CONTACT\r\n} from './types'\r\n\r\n\r\nexport const getContacts = () => {\r\n\treturn {\r\n\t\ttype: GET_CONTACTS\r\n\t}\r\n}\r\n\r\nexport const addContact = (contact) => {\r\n\treturn {\r\n\t\ttype: ADD_CONTACT,\r\n\t\tpayload: contact\r\n\t}\r\n}\r\n\r\nexport const deleteContact = (id) => {\r\n\treturn {\r\n\t\ttype: DELETE_CONTACT,\r\n\t\tpayload: id\r\n\t}\r\n}\r\n\r\nexport const getContact = (id) => {\r\n\treturn {\r\n\t\ttype: GET_CONTACT,\r\n\t\tpayload: id\r\n\t}\r\n}\r\n\r\nexport const updateContact = (contact) => {\r\n\treturn {\r\n\t\ttype: UPDATE_CONTACT,\r\n\t\tpayload: contact\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { getContacts } from '../../actions/contactActions'\r\n\r\n\r\nclass Contacts extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getContacts();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { contacts } = this.props;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h1 className=\"mb-5\">Contact List</h1>\r\n\t\t\t\t{contacts.map(contact => (\r\n\t\t\t\t\t<Contact key={contact.id} contact={contact} />\r\n\t\t\t\t))}\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nContacts.propTypes = {\r\n\tcontacts: PropTypes.array.isRequired,\r\n\tgetContacts: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcontacts: state.contact.contacts\r\n})\r\n\r\nexport default connect(mapStateToProps, { getContacts })(Contacts);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n\tname,\r\n\tlabel,\r\n\tplaceholder,\r\n\ttype,\r\n\tonChange,\r\n\tvalue,\r\n\terror\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<label htmlFor={name}>{label}</label>\r\n\t\t\t<input\r\n\t\t\tonChange={onChange}\r\n\t\t\ttype={type} name={name}\r\n\t\t\tclassName={classnames(\r\n\t\t\t\t'form-control',\r\n\t\t\t\t{'is-invalid': error}\r\n\t\t\t)}\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tvalue={value}/>\r\n\t\t\t{error && <div className=\"invalid-feedback\">{error}</div>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nTextInputGroup.propTypes = {\r\n\tname: \t\t\t\tPropTypes.string.isRequired,\r\n\ttype: \t\t\t\tPropTypes.string.isRequired,\r\n\tlabel: \t\t\t\tPropTypes.string.isRequired,\r\n\tvalue: \t\t\t\tPropTypes.string.isRequired,\r\n\tonChange: \t\tPropTypes.func.isRequired,\r\n\tplaceholder: \tPropTypes.string.isRequired,\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n\ttype: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { addContact } from '../../actions/contactActions'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nclass AddContact extends Component {\r\n\r\n\tstate = {\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\terrors: {}\r\n\t}\r\n\r\n\tonChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst { name, email, phone } = this.state;\r\n\r\n\t\tconst newContact = {\r\n\t\t\tid: uuidv4(),\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone\r\n\t\t}\r\n\r\n\t\tif(name === '') {\r\n\t\t\tthis.setState({errors: {name: \"Name is Required\"}})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(email === '') {\r\n\t\t\tthis.setState({errors: {email: \"Email is Required\"}})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(phone === '') {\r\n\t\t\tthis.setState({errors: {phone: \"Phone is Required\"}})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// ADD CONTACT\r\n\t\tthis.props.addContact(newContact);\r\n\t\t\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t\terrors: ''\r\n\t\t});\r\n\r\n\t\tthis.props.history.push('/');\r\n\t}\r\n\trender() {\r\n\r\n\t\tconst { name, email, phone, errors } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\tAdd Contact\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Name...\"\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\terror={errors.name} />\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Email...\"\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\terror={errors.email} />\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Phone...\"\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\terror={errors.phone} />\r\n\t\t\t\t\t\t<button className=\"btn btn-outline-success btn-block\">Add Contact</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nAddContact.propTypes = {\r\n\taddContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addContact })(AddContact);\r\n","import React, { Component } from 'react'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getContact, updateContact } from '../../actions/contactActions'\r\n\r\nclass EditContact extends Component {\r\n\r\n\tstate = {\r\n\t\tid: '',\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\terrors: {}\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps, nextState) {\r\n\t\t const { id, name, email, phone } = nextProps.contact[0]\r\n\t\t \r\n\t\t\tthis.setState({\r\n\t\t\t\tid,\r\n\t\t\t\tname,\r\n\t\t\t\temail,\r\n\t\t\t\tphone\r\n\t\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//EDIT CONTACT\r\n\t\tconst id = this.props.match.params.id;\r\n\t\tthis.props.getContact(id)\r\n\t}\r\n\r\n\tonChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst { name, email, phone } = this.state;\r\n\r\n\t\tif(name === '') {\r\n\t\t\tthis.setState({errors: {name: \"Name is Required\"}})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(email === '') {\r\n\t\t\tthis.setState({errors: {email: \"Email is Required\"}})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(phone === '') {\r\n\t\t\tthis.setState({errors: {phone: \"Phone is Required\"}})\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { id } = this.props.match.params;\r\n\t\tconst updContact = {\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone\r\n\t\t}\r\n\r\n\t\t//UPDATE CONTACT\r\n\t\tthis.props.updateContact(updContact);\r\n\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tid: '',\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t\terrors: ''\r\n\t\t});\r\n\r\n\t\tthis.props.history.push('/');\r\n\t}\r\n\trender() {\r\n\r\n\t\tconst { name, email, phone, errors } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\tUpdate Contact\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Name...\"\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\terror={errors.name} />\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Email...\"\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\terror={errors.email} />\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Phone...\"\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\terror={errors.phone} />\r\n\t\t\t\t\t\t<button className=\"btn btn-outline-success btn-block\">Update Contact</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nEditContact.propTypes = {\r\n\tgetContact: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcontact: state.contact.contact\r\n})\r\n\r\nexport default connect(mapStateToProps, { getContact, updateContact })(EditContact);\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return ( \r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fa fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fa fa-plus\"></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fa fa-question\"></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default () => {\r\n\treturn (\r\n\t\t// props.match.params.id\r\n\t\t<div className=\"display-4\">\r\n\t\t\t<h1>About Page</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n\t\t\t<p className=\"lead\">Sorry, that page does not exist.</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Contacts from \"./components/contact/Contacts\";\nimport AddContact from \"./components/contact/AddContact\";\nimport EditContact from \"./components/contact/EditContact\"\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}